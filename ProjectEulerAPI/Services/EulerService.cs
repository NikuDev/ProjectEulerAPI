using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace ProjectEulerAPI.Services
{
    public class EulerService
    {
        /// <summary>
        /// If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
        /// Find the sum of all the multiples of 3 or 5 below 1000.
        /// </summary>
        /// <returns>The sum of all the multiples of 3 or 5 below 1000</returns>
        public int _1()
        {            
            // First Version
            /*            
            List<int> multiplesOf3Or5 = new List<int>();

            for(int i = 1; i < 1000; i++)
            {
                if (i % 3 == 0)
                    multiplesOf3Or5.Add(i);
                else if (i % 5 == 0)
                    multiplesOf3Or5.Add(i);
            }

            return multiplesOf3Or5.Sum();
            */

            // Improved Version
            int x = 1;
            int sum = 0;
            while(x < 1000)
            {
                if (x % 3 == 0 || x % 5 == 0)
                    sum += x;

                x++;
            }

            return sum;
        }

        /// <summary>
        /// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
        /// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
        /// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
        /// </summary>
        /// <returns></returns>
        public int _2()
        {

            int first = 1;
            int second = 2;
            int fibonacci = first + second;

            int sum = 0;

            while(fibonacci < 4000000)
            {
                if (second % 2 == 0)
                    sum += second;

                // 3 = second, 2 = first
                first = second;
                second = fibonacci;
                fibonacci = first + second;
            }

            return sum;
        }
    }
}
